#####################################
#            Created by             #
#                SBR                #
#####################################
import os

import telebot
#from telebot import types
from config_parser import ConfigParser
from frontend import Bot_inline_btns
from backend import UserData
############static variables#####################
config_name = 'secrets.json'
#################################################


def broadcast_msg():
    buttons = Bot_inline_btns()
    for admin in config['admins']:
        bot.send_message(admin, '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.', reply_markup=buttons.verification())


def main():
    @bot.message_handler(commands=['start', 'creators', 'admin'])
    def start(message):
        command = message.text.replace('/', '')
        buttons = Bot_inline_btns()
        user_data.init(message.chat.id)
        user_state = user_data.get_user(message.chat.id)
        if not user_state[0]:
            if command == 'start':
                bot.reply_to(message,
                             '–ü—Ä–∏–≤–µ—Çüëã\n–Ø MusicDownloaderBotü§ñ - –ø–æ–º–æ–≥—É —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –º—É–∑—ã–∫–∏\n–ù–∞–ø–∏—à–∏—Ç–µ /creators –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–∑–¥–∞—Ç–µ–ª—è—Ö.')
                bot.send_message(message.chat.id, '–ü—Ä–æ–π–¥–∏—Ç–µ –º–æ–¥–µ—Ä–∞—Ü–∏—é‚úÖ', reply_markup=buttons.start_btns())
            elif command == 'creators':
                bot.reply_to(message, '–°–æ–∑–¥–∞—Ç–µ–ª–∏:\nzzsxd - —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –±–æ—Ç–∞.\nSBR - –±—ç–∫–µ–Ω–¥ —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –±–æ—Ç–∞.',
                             reply_markup=buttons.authors())
            elif command == 'admin':
                bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n'
                                                  f'–í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –ø–µ—Å–µ–Ω:\n–¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:\n'
                                                  f'–°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ:\n', reply_markup=buttons.admin_btns())


    @bot.message_handler(commands=['AddMusic'])
    def addmusic(message):
        buttons = Bot_inline_btns()
        bot.send_message(message.chat.id, '–°–∫–∞—á–∞—Ç—å –ø–µ—Å–Ω—é', reply_markup=buttons.dow_music())


    @bot.callback_query_handler(func=lambda call: True)
    def callback(call):
        buttons = Bot_inline_btns()
        if call.data == 'moder':
            bot.send_message(call.message.chat.id, '–û–∂–∏–¥–∞–π—Ç–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏')
            broadcast_msg()
        elif call.data == 'accept':
            print(call.message)
            bot.send_message(call.message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã.\n–ù–∞–ø–∏—à–∏—Ç–µ /addmusic —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!')
        elif call.data == 'rejected':
            bot.send_message(call.message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–µ –º–æ–∂–µ–º –≤–∞—Å –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å!')
        elif call.data == 'stats':
            bot.send_message(call.message.chat.id, '–í—Å–µ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π:\n–°–∫–∞—á–∏–≤–∞–Ω–∏–π –∑–∞ –º–µ—Å—è—Ü:\n–°–∫–∞—á–∏–≤–∞–Ω–∏–π –∑–∞ –Ω–µ–¥–µ–ª—é:\n'
                                                   '–°–∫–∞—á–∏–≤–∞–Ω–∏–π –∑–∞ –¥–µ–Ω—å:')
        elif call.data == 'users':
            bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=buttons.users_btns())
        elif call.data == 'allusers':
            pass
        elif call.data == 'searchnickname':
            pass
        elif call.data == 'change_folder':
            bot.send_message(call.message.chat.id, '–ü—É—Ç—å –¥–æ –ø–∞–ø–∫–∏', reply_markup=buttons.folder_btns())
        elif call.data == 'changepath':
            pass
        elif call.data == 'onname':
            pass
        elif call.data == 'onyoutube':
            pass
        elif call.data == 'onvk':
            pass
        elif call.data == 'onyandex':
            pass
        elif call.data == 'onsoundcloud':
            pass
    bot.polling(none_stop=True)


if '__main__' == __name__:
    work_dir = os.path.dirname(os.path.realpath(__file__))
    config = ConfigParser(f'{work_dir}/{config_name}').get_config()
    user_data = UserData()
    bot = telebot.TeleBot(config['tg_api'])
    main()
